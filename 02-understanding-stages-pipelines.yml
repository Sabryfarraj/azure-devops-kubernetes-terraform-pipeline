# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: 'MySelfHostedAgentPool'

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - powershell: |
        Write-Output "Build FirstJob"
      displayName: 'Print Build FirstJob'
    - powershell: |
        Write-Output "$(PipelineLevelVariable)"
      displayName: 'Print PipelineLevelVariable'
    - powershell: |
        Write-Output "$(Build.BuildNumber)"
      displayName: 'Print Build.BuildNumber'
    - powershell: |
        Write-Output "$(Build.BuildId)"
      displayName: 'Print Build.BuildId'
    - powershell: |
        Write-Output "$(Build.SourceBranchName)"
      displayName: 'Print Build.SourceBranchName'
    - powershell: |
        Write-Output "$(Build.SourcesDirectory)"
      displayName: 'Print Build.SourcesDirectory'
    - powershell: |
        Write-Output "$(System.DefaultWorkingDirectory)"
      displayName: 'Print System.DefaultWorkingDirectory'
    - powershell: |
        Get-ChildItem -Recurse -Path "$(System.DefaultWorkingDirectory)"
      displayName: 'List files in DefaultWorkingDirectory'
    - powershell: |
        Write-Output "$(Build.ArtifactStagingDirectory)"
      displayName: 'Print Build.ArtifactStagingDirectory'
    
  # - job: SecondJob
  #   steps:
  #   - powershell: |
  #       Write-Output "Build SecondJob"
  #     displayName: 'Print Build SecondJob'
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - powershell: |
#         Write-Output "$(environment)DeployJob"
#       displayName: 'Print DevDeployJob'
# - stage: QADeploy
#   variables:
#     environment: QA
#   dependsOn: Build
#   jobs:
#   - job: QADeployJob
#     steps:
#     - powershell: |
#         Write-Output "$(environment)DeployJob"
#       displayName: 'Print QADeployJob'
# - stage: ProdDeploy
#   dependsOn: 
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: ProdDeployJob
#     steps:
#     - powershell: |
#         Write-Output "ProdDeployJob"
#       displayName: 'Print ProdDeployJob'
